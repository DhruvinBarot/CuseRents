# Generated by Django 5.0.1 on 2025-10-25 18:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        ('items', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(help_text='Rating from 1-5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('text', models.TextField(blank=True, help_text='Written review text', max_length=1000)),
                ('video_url', models.URLField(blank=True, help_text='Cloudinary URL for video testimonial (optional)')),
                ('video_thumbnail', models.URLField(blank=True, help_text='Thumbnail for video review')),
                ('video_duration', models.IntegerField(blank=True, help_text='Video duration in seconds (max 1 minute)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('photos', models.JSONField(blank=True, default=list, help_text='Array of photo URLs showing item condition')),
                ('is_verified', models.BooleanField(default=True, help_text='Whether review is from verified rental')),
                ('helpful_count', models.IntegerField(default=0, help_text='Number of users who found this review helpful')),
                ('flagged', models.BooleanField(default=False, help_text='Whether review has been flagged for moderation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(help_text='Booking this review is for', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bookings.booking')),
                ('item', models.ForeignKey(blank=True, help_text='Item being reviewed (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='items.item')),
                ('reviewee', models.ForeignKey(help_text='User being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(help_text='User writing the review', on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reviews',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['item', '-created_at'], name='reviews_item_id_df4769_idx'), models.Index(fields=['reviewee', '-created_at'], name='reviews_reviewe_8697f0_idx'), models.Index(fields=['stars'], name='reviews_stars_7eb443_idx')],
                'unique_together': {('booking', 'reviewer', 'reviewee')},
            },
        ),
    ]
