# Generated by Django 5.0.1 on 2025-10-25 18:14

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('items', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='Rental start date/time')),
                ('end_time', models.DateTimeField(help_text='Rental end date/time')),
                ('actual_return_time', models.DateTimeField(blank=True, help_text='Actual time item was returned', null=True)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total rental price', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Security deposit amount', max_digits=8)),
                ('wallet_credit_used', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount paid from wallet balance', max_digits=8)),
                ('late_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Late return fee', max_digits=8)),
                ('reward_points_earned', models.IntegerField(default=0, help_text='Reward points earned from this booking')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('accepted', 'Accepted'), ('active', 'Active (In Progress)'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='pending', help_text='Current booking status', max_length=20)),
                ('booking_code', models.CharField(help_text='Unique 6-character booking code', max_length=6, unique=True)),
                ('stripe_payment_id', models.CharField(blank=True, help_text='Stripe payment intent ID', max_length=100)),
                ('condition_at_pickup', models.TextField(blank=True, help_text='Item condition notes at pickup')),
                ('condition_at_return', models.TextField(blank=True, help_text='Item condition notes at return')),
                ('damage_reported', models.BooleanField(default=False, help_text='Whether damage was reported')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bundle', models.ForeignKey(blank=True, help_text='Bundle being rented (null if single item)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='items.bundle')),
                ('item', models.ForeignKey(blank=True, help_text='Single item being rented (null if bundle)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='items.item')),
                ('renter', models.ForeignKey(help_text='User renting the item(s)', on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_renter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_price', models.DecimalField(decimal_places=2, help_text='Price for this item in the booking', max_digits=8)),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_items', to='bookings.booking')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_items', to='items.item')),
            ],
            options={
                'db_table': 'booking_items',
                'unique_together': {('booking', 'item')},
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='items',
            field=models.ManyToManyField(help_text='Items in this booking (used for bundles)', related_name='bundle_bookings', through='bookings.BookingItem', to='items.item'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['renter', '-created_at'], name='bookings_renter__7f46d2_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='bookings_status_51373b_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_code'], name='bookings_booking_d6111c_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['start_time', 'end_time'], name='bookings_start_t_b42a03_idx'),
        ),
    ]
