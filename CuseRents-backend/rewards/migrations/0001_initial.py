# Generated by Django 5.0.1 on 2025-10-25 18:14

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Available wallet balance in USD', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('reward_points', models.IntegerField(default=0, help_text='Accumulated reward points', validators=[django.core.validators.MinValueValidator(0)])),
                ('lifetime_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount earned through rentals (lifetime)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User who owns this wallet', on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'wallets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount (positive for credit, negative for debit)', max_digits=10)),
                ('transaction_type', models.CharField(choices=[('rental_earning', 'Rental Earning'), ('rental_payment', 'Rental Payment'), ('reward_redemption', 'Reward Redeemed'), ('referral_bonus', 'Referral Bonus'), ('deposit_hold', 'Deposit Hold'), ('deposit_refund', 'Deposit Refund'), ('platform_fee', 'Platform Fee')], help_text='Type of transaction', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Transaction description/notes')),
                ('balance_after', models.DecimalField(decimal_places=2, help_text='Wallet balance after this transaction', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, help_text='Related booking (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_transactions', to='bookings.booking')),
                ('wallet', models.ForeignKey(help_text='Wallet this transaction belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='rewards.wallet')),
            ],
            options={
                'db_table': 'wallet_transactions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['wallet', '-created_at'], name='wallet_tran_wallet__3d47ad_idx'), models.Index(fields=['transaction_type'], name='wallet_tran_transac_377ecc_idx')],
            },
        ),
    ]
